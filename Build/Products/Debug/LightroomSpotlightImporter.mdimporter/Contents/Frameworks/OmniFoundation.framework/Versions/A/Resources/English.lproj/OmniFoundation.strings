/* formatter input error format */
"'%@' is not a valid social security number." = "'%@' is not a valid social security number.";

/* humanReadableStringForTimeInterval */
"%@ ago" = "%@ ago";

/* abbreviated string for bytes format */
"%0.1f GB" = "%0.1f GB";

/* abbreviated string for gigahertz format */
"%0.1f GHz" = "%0.1f GHz";

/* abbreviated string for bytes format */
"%0.1f kB" = "%0.1f kB";

/* abbreviated string for kilohertz format */
"%0.1f KHz" = "%0.1f KHz";

/* abbreviated string for bytes format */
"%0.1f MB" = "%0.1f MB";

/* abbreviated string for megahertz format */
"%0.1f MHz" = "%0.1f MHz";

/* abbreviated string for bytes format */
"%0.1f PB" = "%0.1f PB";

/* abbreviated string for bytes format */
"%0.1f TB" = "%0.1f TB";

/* abbreviated string for terahertz format */
"%0.1f THz" = "%0.1f THz";

/* abbreviated string for bytes format */
"%d bytes" = "%d bytes";

/* humanReadableStringForTimeInterval */
"%ld day, %ld:%02ld:%02ld" = "%1$ld day, %2$ld:%3$ld:%4$ld";

/* humanReadableStringForTimeInterval */
"%ld days, %ld:%02ld:%02ld" = "%1$ld days, %2$ld:%3$ld:%4$ld";

/* humanReadableStringForTimeInterval */
"%ld seconds" = "%ld seconds";

/* humanReadableStringForTimeInterval */
"%ld:%02ld" = "%1$ld:%2$ld";

/* humanReadableStringForTimeInterval */
"%ld:%02ld:%02ld" = "%1$ld:%2$ld:%3$ld";

/* abbreviated string for hertz format */
"%u Hz" = "%u Hz";

/* script exception format */
"Add command has invalid 'to' specifier." = "Add command has invalid 'to' specifier.";

/* script exception format */
"Add command missing the required 'to' specifier." = "Add command missing the required 'to' specifier.";

/* invalid bundle reason */
"Bundle is obsolete" = "Bundle is obsolete";

/* invalid bundle reason */
"Bundle requires additional software" = "Bundle requires additional software";

/* compression error reason */
"bzip2 library returned error code %d when finishing compression. %s." = "bzip2 library returned error code %1$d when finishing compression. %2$s.";

/* decompression error reason */
"bzip2 library returned error code %d when reading data. %s." = "bzip2 library returned error code %1$d when reading data. %2$s.";

/* compression error reason */
"bzip2 library returned error code %d when writing data. %s." = "bzip2 library returned error code %1$d when writing data. %2$s.";

/* error recovery option */
"Cancel <error recovery>" = "Cancel";

/* error description - a UNIX subprocess exited due to a signal */
"command '%@' exited due to signal %d (%s)" = "command '%1$@' exited due to signal %2$d (%3$s)";

/* error description - a UNIX subprocess exited with a nonzero status */
"command '%@' returned %d" = "command '%1$@' returned %2$d";

/* Error message when mkdir() fails
   Error message when mkdir() will fail because there's a file in the way
   Error message when stat() fails when trying to create a directory tree */
"Could not create directory" = "Could not create directory";

/* error description - unable to start a child process using the fork syscall
   error description - unable to start a child process using the spawn syscall */
"Could not fork '%@'" = "Could not fork '%@'";

/* time span formatter span */
"d" = "d";

/* time span formatter span */
"day" = "day";

/* time span formatter span */
"days" = "days";

/* invalid bundle reason */
"Duplicate bundle name" = "Duplicate bundle name";

/* exception reason */
"Element '%@' not allowed at path: %@" = "Element '%1$@' not allowed at path: %2$@";

/* error description */
"Error creating pipe" = "Error creating pipe";

/* Error encountered when trying to pass data through a UNIX command - parameter is underlying error text */
"Error filtering data through UNIX command: %@" = "Error filtering data through UNIX command: %@";

/* time span formatter span */
"h" = "h";

/* time span formatter span */
"hour" = "hour";

/* time span formatter span */
"hours" = "hours";

/* formatter input error */
"Invalid time span format" = "Invalid time span format";

/* local bundle path readable string */
"local configuration file" = "local configuration file";

/* time span formatter span */
"m" = "m";

/* time span formatter span */
"minute" = "minute";

/* time span formatter span */
"minutes" = "minutes";

/* time span formatter span */
"mo" = "mo";

/* time span formatter span */
"month" = "month";

/* time span formatter span */
"months" = "months";

/* error reason */
"No root element was found" = "No root element was found";

/* invalid bundle reason */
"Not a valid bundle" = "Not a valid bundle";

/* formatter input error */
"Only enter numbers separated by spaces." = "Only enter numbers separated by spaces.";

/* script exception format */
"Remove command has invalid 'from' specifier." = "Remove command has invalid 'from' specifier.";

/* script exception format */
"Remove command missing the required 'from' specifier." = "Remove command missing the required 'from' specifier.";

/* humanReadableStringForTimeInterval */
"right now" = "right now";

/* time span formatter span */
"s" = "s";

/* time span formatter span */
"second" = "second";

/* time span formatter span */
"seconds" = "seconds";

/* script exception format */
"Specified container doesn't handle the add command." = "Specified container doesn't handle the add command.";

/* script exception format */
"Specified container doesn't handle the remove command." = "Specified container doesn't handle the remove command.";

/* formatter input error */
"That is not a valid date." = "That is not a valid date.";

/* formatter input error */
"That is not a valid phone number." = "That is not a valid phone number.";

/* formatter input error */
"That is not a valid social security number." = "That is not a valid social security number.";

/* formatter input error */
"That is not a valid state abbreviation." = "That is not a valid state abbreviation.";

/* formatter input error */
"That is not a valid zip code." = "That is not a valid zip code.";

/* compression error description */
"Unable to compress data." = "Unable to compress data.";

/* error description */
"Unable to create lock file '%@'." = "Unable to create lock file '%@'.";

/* decompression error description */
"Unable to decompress data." = "Unable to decompress data.";

/* decompression exception format */
"Unable to decompress gzip data: invalid header" = "Unable to decompress gzip data: invalid header";

/* compression error description */
"Unable to initialize compression" = "Unable to initialize compression";

/* decompression error description */
"Unable to initialize decompression" = "Unable to initialize decompression";

/* script exception format */
"Unable to resolve insertion container in specifier %@" = "Unable to resolve insertion container in specifier %@";

/* script exception format */
"Unable to resolve insertion index in specifier %@" = "Unable to resolve insertion index in specifier %@";

/* script exception format */
"Unable to resolve insertion key in specifier %@" = "Unable to resolve insertion key in specifier %@";

/* error description */
"Unable to write cache file to '%@'" = "Unable to write cache file to '%@'";

/* decompression error reason */
"unrecognized compression format." = "unrecognized compression format.";

/* time span formatter span */
"w" = "w";

/* error description */
"Warning encountered while loading XML." = "Warning encountered while loading XML.";

/* time span formatter span */
"week" = "week";

/* time span formatter span */
"weeks" = "weeks";

/* time span formatter span */
"y" = "y";

/* time span formatter span */
"year" = "year";

/* time span formatter span */
"years" = "years";

/* zlib error reason */
"zlib returned error code %d." = "zlib returned error code %d.";

/* zlib error reason */
"zlib returned error code %d. %s." = "zlib returned error code %1$d. %2$s.";

